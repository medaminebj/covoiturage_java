/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.ListePassager;
import Entity.*;
import DAO.*;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import metier.*;
import utils.Exceptions.ProblemeTechniqueException;
/**
 *
 * @author Axel
 */
public class ListePassager extends javax.swing.JFrame {
    private Passagers passagers = new Passagers();
    private List<participerevents> PE = new ArrayList<>();
    private Itineraire itineraire = new Itineraire();
    /**
     * Creates new form ListePassager
     */
    public ListePassager() {
        initComponents();
    }
    
     public ListePassager(List<participerevents> liste) {
        initComponents();
        this.PE=liste ; 
    }
     
   public void RempllisagePassager()
   {
       for(int i=0;i<PE.size();i++)
       { 
           if (!PE.get(i).isEstAccepter())
           {
                passagers = new Passagers();
                passagers=PE.get(i).getIdPassagers();
                String NomPrenom = passagers.getNom()+" "+passagers.getPrenom();
                ListePassagerBox.addItem(NomPrenom);
           }
           
       }
   }
  
   public void EnchangeBoxMail()
   {
     
      
   }
   
   public void GetNotePassager()
   {
       String GetNomPrenomBox = ListePassagerBox.getSelectedItem().toString();
       int id=0 ;
        try {
             for(int i=0;i<PE.size();i++)
             {
                passagers = new Passagers();
                passagers=PE.get(i).getIdPassagers();
                String NomPrenom = passagers.getNom()+" "+passagers.getPrenom();
                if (NomPrenom.equals(GetNomPrenomBox))
                {
                     id = passagers.getIdPassagers();
                }
               
            }
             if(id!=0)
             {
                passagers = PassagersDAO.getInstance().getPassagerById(id);
                Notetf.setText(String.valueOf(passagers.getNote()));
             }
        } catch (ProblemeTechniqueException ex) {
            Logger.getLogger(ListePassager.class.getName()).log(Level.SEVERE, null, ex);
        }
   }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ListePassagerBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        Notetf = new javax.swing.JTextField();
        ConfirmerBtn = new javax.swing.JButton();
        QuitterBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("              Liste des passagers ");

        jLabel2.setText("Les Passagers : ");

        ListePassagerBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ListePassagerBoxItemStateChanged(evt);
            }
        });

        jLabel3.setText("Note :");

        ConfirmerBtn.setText("Confirmer");
        ConfirmerBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ConfirmerBtnMouseClicked(evt);
            }
        });

        QuitterBtn.setText("Quitter");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ConfirmerBtn)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(73, 73, 73)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ListePassagerBox, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Notetf, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addComponent(QuitterBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ListePassagerBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Notetf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ConfirmerBtn)
                    .addComponent(QuitterBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
      //  EmailBox.setVisible(false);
        Notetf.disable();
        RempllisagePassager();
        
    }//GEN-LAST:event_formWindowOpened

    private void ListePassagerBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ListePassagerBoxItemStateChanged
      int index = ListePassagerBox.getSelectedIndex();
  
      GetNotePassager();
        
    }//GEN-LAST:event_ListePassagerBoxItemStateChanged

    private void ConfirmerBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ConfirmerBtnMouseClicked
        String GetNomPrenomBox = ListePassagerBox.getSelectedItem().toString();
       int id=0 ;
        try {
             for(int i=0;i<PE.size();i++)
             {
                passagers = new Passagers();
                passagers=PE.get(i).getIdPassagers();
                itineraire=PE.get(i).getIdItineraires();
                String NomPrenom = passagers.getNom()+" "+passagers.getPrenom();
                if (NomPrenom.equals(GetNomPrenomBox))
                {
                     id = passagers.getIdPassagers();
                     
                }
               
            }
             if(id!=0)
             {
                passagers = PassagersDAO.getInstance().getPassagerById(id);
                 try {
                    boolean verif = participereventsDAO.getInstance().updateAcceptationPassager(passagers, itineraire);
                    if (verif)
                    {
                        JOptionPane.showMessageDialog(null, "la Confirmation à été rétablie avec succé");
                    }
                    else
                    {
                         JOptionPane.showMessageDialog(null, "la Confirmation n'a été abouti");
                    }
                 } catch (ClassNotFoundException ex) {
                     Logger.getLogger(ListePassager.class.getName()).log(Level.SEVERE, null, ex);
                 } catch (SQLException ex) {
                     Logger.getLogger(ListePassager.class.getName()).log(Level.SEVERE, null, ex);
                 }
             }
        } catch (ProblemeTechniqueException ex) {
            Logger.getLogger(ListePassager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ConfirmerBtnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListePassager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListePassager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListePassager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListePassager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListePassager().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ConfirmerBtn;
    private javax.swing.JComboBox ListePassagerBox;
    private javax.swing.JTextField Notetf;
    private javax.swing.JButton QuitterBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
