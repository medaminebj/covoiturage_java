/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.Administrateur.Statistiques;

import Entity.Session;
import com.itextpdf.text.Paragraph;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import metier.AuthentificationMetier;
import org.jfree.chart.ChartMouseEvent;
import org.jfree.chart.ChartMouseListener;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import utils.Exceptions.ProblemeTechniqueException;

/**
 *
 * @author Amine
 */
public class Statistiques extends javax.swing.JFrame {
    AuthentificationMetier authentificationMetier;
    int currentStat; // indique les stats en cours de visualisation
    /**
     * Creates new form Statistiques
     */
    public Statistiques() {
        initComponents();
        
        authentificationMetier = new AuthentificationMetier();
        
        //cacher les filtres au debut
        filterYear.setVisible(false);
        filterYearLabel.setVisible(false);
        filterMonth.setVisible(false);
        filterMonthLabel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menucontainer = new javax.swing.JTabbedPane();
        comptesStatPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        CompteStatResult = new javax.swing.JPanel();
        histoBtnComptes = new javax.swing.JButton();
        filterStatCompte = new javax.swing.JPanel();
        filterYearLabel = new javax.swing.JLabel();
        filterYear = new javax.swing.JSpinner();
        genererStat = new javax.swing.JButton();
        filterMonthLabel = new javax.swing.JLabel();
        filterMonth = new javax.swing.JComboBox();
        addToPdfBtn = new javax.swing.JButton();
        inscriBtnComptes = new javax.swing.JButton();
        banStatPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1024, 768));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Les statistiques des comptes :");

        CompteStatResult.setLayout(new java.awt.BorderLayout());

        histoBtnComptes.setText("pourcentage par type");
        histoBtnComptes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                histoBtnComptesMousePressed(evt);
            }
        });

        filterYearLabel.setText("Année :");

        genererStat.setText("Generer");
        genererStat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                genererStatMousePressed(evt);
            }
        });

        filterMonthLabel.setText("Mois:");

        filterMonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Toute l'année", "Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Aout", "Septembre", "Octobre", "Novombre", "Décembre" }));

        addToPdfBtn.setText("Ajouter au PDF");
        addToPdfBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                addToPdfBtnMousePressed(evt);
            }
        });

        javax.swing.GroupLayout filterStatCompteLayout = new javax.swing.GroupLayout(filterStatCompte);
        filterStatCompte.setLayout(filterStatCompteLayout);
        filterStatCompteLayout.setHorizontalGroup(
            filterStatCompteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filterStatCompteLayout.createSequentialGroup()
                .addComponent(genererStat)
                .addGap(18, 18, 18)
                .addComponent(addToPdfBtn)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(filterStatCompteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filterStatCompteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(filterYear, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filterYearLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(filterStatCompteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(filterStatCompteLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(filterMonthLabel))
                    .addGroup(filterStatCompteLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(filterMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        filterStatCompteLayout.setVerticalGroup(
            filterStatCompteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filterStatCompteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filterStatCompteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filterYearLabel)
                    .addComponent(filterMonthLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(filterStatCompteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filterYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filterMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(filterStatCompteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(genererStat)
                    .addComponent(addToPdfBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        inscriBtnComptes.setText("les inscriptions");
        inscriBtnComptes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                inscriBtnComptesMousePressed(evt);
            }
        });

        javax.swing.GroupLayout comptesStatPanelLayout = new javax.swing.GroupLayout(comptesStatPanel);
        comptesStatPanel.setLayout(comptesStatPanelLayout);
        comptesStatPanelLayout.setHorizontalGroup(
            comptesStatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(comptesStatPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(comptesStatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 979, Short.MAX_VALUE)
                    .addComponent(CompteStatResult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(comptesStatPanelLayout.createSequentialGroup()
                        .addComponent(histoBtnComptes)
                        .addGap(18, 18, 18)
                        .addComponent(inscriBtnComptes)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(filterStatCompte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        comptesStatPanelLayout.setVerticalGroup(
            comptesStatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(comptesStatPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(comptesStatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(histoBtnComptes)
                    .addComponent(inscriBtnComptes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filterStatCompte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 510, Short.MAX_VALUE)
                .addComponent(CompteStatResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        menucontainer.addTab("Les comptes", comptesStatPanel);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Les statistiques des bannissements :");

        javax.swing.GroupLayout banStatPanelLayout = new javax.swing.GroupLayout(banStatPanel);
        banStatPanel.setLayout(banStatPanelLayout);
        banStatPanelLayout.setHorizontalGroup(
            banStatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(banStatPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 979, Short.MAX_VALUE)
                .addContainerGap())
        );
        banStatPanelLayout.setVerticalGroup(
            banStatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(banStatPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(657, Short.MAX_VALUE))
        );

        menucontainer.addTab("Les bannissements", banStatPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(menucontainer)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(menucontainer)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void histoBtnComptesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_histoBtnComptesMousePressed
        currentStat = 1;
       
        filterYear.setVisible(true);
        filterYearLabel.setVisible(true);
        filterMonth.setVisible(false);
        filterMonthLabel.setVisible(false);
        
        filterYear.setValue(0);
       
        histoBtnComptes(0);
        
        ajouterAuPdfBtnValue();
    }//GEN-LAST:event_histoBtnComptesMousePressed

    private void histoBtnComptes(int year){
        try {
            CompteStatResult.removeAll();
            CompteStatResult.add(new ChartPanel(authentificationMetier.get3DPieChartsAllDataByYear(year)));
            CompteStatResult.validate();
        } catch (ProblemeTechniqueException ex) {
            JOptionPane.showMessageDialog(null, "il ya un probleme technique", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void inscriBtnComptesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inscriBtnComptesMousePressed
        currentStat = 2;
        
        filterYear.setVisible(true);
        filterYearLabel.setVisible(true);
        filterMonth.setVisible(true);
        filterMonth.setSelectedIndex(0);
        filterMonthLabel.setVisible(true);
        
        filterYear.setValue(Calendar.getInstance().get(Calendar.YEAR));
        
        inscriBtnCompteStat(Calendar.getInstance().get(Calendar.YEAR),0);
        
        ajouterAuPdfBtnValue();
    }//GEN-LAST:event_inscriBtnComptesMousePressed

    private void genererStatMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_genererStatMousePressed
        switch (menucontainer.getSelectedIndex()){
            case 0://les comptes
                if (currentStat == 1) //histogramme
                    histoBtnComptes(Integer.parseInt(filterYear.getValue().toString()));
                if (currentStat == 2) //barchart
                {
                    inscriBtnCompteStat(Integer.parseInt(filterYear.getValue().toString()),filterMonth.getSelectedIndex());
                }
                break;
        }
    }//GEN-LAST:event_genererStatMousePressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        ajouterAuPdfBtnValue();
    }//GEN-LAST:event_formWindowOpened

    private void addToPdfBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addToPdfBtnMousePressed
        String titlePage = JOptionPane.showInputDialog(null, "Saissiez le titre");
        if (titlePage != null && !titlePage.equals(""))
            if (JOptionPane.showConfirmDialog(null, "Voulez vous créer la page " + titlePage + " ?", "Ajouter une nouvelle page au pdf", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
            {
                Paragraph contentPage = new Paragraph();
                try {
                    
                    int year = Integer.parseInt(filterYear.getValue().toString());
                    int month = filterMonth.getSelectedIndex();
                    
                    //bug quand chart = null; pour l'initier
                    JFreeChart chart = authentificationMetier.get3DPieChartsAllDataByYear(year);;
                    
                    switch (menucontainer.getSelectedIndex()){
                        case 0://les comptes
                            if (currentStat == 1) //histogramme
                                authentificationMetier.get3DPieChartsAllDataByYear(year);
                            if (currentStat == 2) //barchart
                            {   
                                if (month == 0)
                                    chart = authentificationMetier.getBarChartsTypeDateCreationByYearVertical(year);
                                else
                                    chart = authentificationMetier.getBarChartsTypeDateCreationByYearandMonthVertical(year,month);
                            }
                            break;
                    }
                    
                    Session.getInstance().getPdfFile().addPage(chart, titlePage);
                    
                } catch (ProblemeTechniqueException ex) {
                    Logger.getLogger(Statistiques.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
    }//GEN-LAST:event_addToPdfBtnMousePressed

    private void inscriBtnCompteStat(int year, int month){
        try {
            CompteStatResult.removeAll();
            
            if (month == 0)
                CompteStatResult.add(new ChartPanel(authentificationMetier.getBarChartsTypeDateCreationByYear(year)));
            else
                CompteStatResult.add(new ChartPanel(authentificationMetier.getBarChartsTypeDateCreationByYearandMonth(year,month)));
            
            CompteStatResult.validate();
        } catch (ProblemeTechniqueException ex) {
            JOptionPane.showMessageDialog(null, "il ya un probleme technique", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void ajouterAuPdfBtnValue(){
        if (Session.getInstance().isModePdfOn())
            addToPdfBtn.setVisible(true);
        else
            addToPdfBtn.setVisible(false);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Statistiques.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Statistiques.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Statistiques.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Statistiques.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Statistiques().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CompteStatResult;
    private javax.swing.JButton addToPdfBtn;
    private javax.swing.JPanel banStatPanel;
    private javax.swing.JPanel comptesStatPanel;
    private javax.swing.JComboBox filterMonth;
    private javax.swing.JLabel filterMonthLabel;
    private javax.swing.JPanel filterStatCompte;
    private javax.swing.JSpinner filterYear;
    private javax.swing.JLabel filterYearLabel;
    private javax.swing.JButton genererStat;
    private javax.swing.JButton histoBtnComptes;
    private javax.swing.JButton inscriBtnComptes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTabbedPane menucontainer;
    // End of variables declaration//GEN-END:variables
}
