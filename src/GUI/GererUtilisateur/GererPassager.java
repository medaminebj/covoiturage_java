/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.GererUtilisateur;

import Entity.*;
import java.sql.Date;
import javax.swing.JOptionPane;
import utils.Exceptions.ProblemeTechniqueException;

/**
 *
 * @author sabri
 */
public class GererPassager extends javax.swing.JFrame {

    /**
     * Creates new form GerrerPassager
     */
    public GererPassager() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        enregisterBtn = new javax.swing.JButton();
        modifierBtn = new javax.swing.JButton();
        supprimerBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        datagrid = new javax.swing.JTable();
        RetourBTN = new javax.swing.JButton();
        nomTF = new javax.swing.JTextField();
        NomLabel = new javax.swing.JLabel();
        PrenomLabel = new javax.swing.JLabel();
        DateNaissLabel = new javax.swing.JLabel();
        dateNaissanceTF = new javax.swing.JTextField();
        yyyy = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        adresseTA = new javax.swing.JTextArea();
        AdresseLabel = new javax.swing.JLabel();
        TelLabel = new javax.swing.JLabel();
        telephoneTF = new javax.swing.JTextField();
        sexeCB = new javax.swing.JComboBox();
        SexeLabel = new javax.swing.JLabel();
        EmailTf = new javax.swing.JTextField();
        EmailLabel = new javax.swing.JLabel();
        LoginLabel = new javax.swing.JLabel();
        loginTF = new javax.swing.JTextField();
        errLoginLabel = new javax.swing.JLabel();
        dateCreationTF = new javax.swing.JTextField();
        DatecLabel = new javax.swing.JLabel();
        DateMLabel = new javax.swing.JLabel();
        dateDerniereModificationTF = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        passwordTF = new javax.swing.JPasswordField();
        ConfirmPasswordLabel = new javax.swing.JLabel();
        confirmationPasswordTF = new javax.swing.JPasswordField();
        prenomTF = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1013, 486));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        enregisterBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Enregistrer.png"))); // NOI18N
        enregisterBtn.setText("Enregistrer");
        enregisterBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enregisterBtnMouseClicked(evt);
            }
        });
        enregisterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enregisterBtnActionPerformed(evt);
            }
        });

        modifierBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/modifier.png"))); // NOI18N
        modifierBtn.setText("Modifier");
        modifierBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                modifierBtnMouseClicked(evt);
            }
        });
        modifierBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierBtnActionPerformed(evt);
            }
        });

        supprimerBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/supprimer.png"))); // NOI18N
        supprimerBtn.setText("Supprimer");
        supprimerBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                supprimerBtnMouseClicked(evt);
            }
        });

        datagrid.setModel(new utils.components.jtable.tableModelGererUtilisateurPassager());
        datagrid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                datagridMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(datagrid);

        RetourBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Accueil.png"))); // NOI18N
        RetourBTN.setText("Accueil");

        nomTF.setMaximumSize(new java.awt.Dimension(160, 20));

        NomLabel.setText("Nom :");

        PrenomLabel.setText("Prénom :");

        DateNaissLabel.setText("Date de naissance :");

        yyyy.setText("YYYY-MM-DD");

        adresseTA.setColumns(20);
        adresseTA.setRows(5);
        jScrollPane2.setViewportView(adresseTA);

        AdresseLabel.setText("Adresse :");

        TelLabel.setText("Téléphone :");

        sexeCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Homme", "Femme" }));

        SexeLabel.setText("Sexe :");

        EmailLabel.setText("Email :");

        LoginLabel.setText("Login :");

        loginTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                loginTFFocusLost(evt);
            }
        });

        errLoginLabel.setForeground(new java.awt.Color(255, 0, 0));
        errLoginLabel.setText("Login existant");
        errLoginLabel.setFocusable(false);

        DatecLabel.setText("Date de création :");

        DateMLabel.setText("Date de la derniere modification :");

        passwordLabel.setText("Nouveau mot de passel :");

        ConfirmPasswordLabel.setText("Confirmation du mot de passe :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PrenomLabel)
                .addGap(79, 79, 79)
                .addComponent(prenomTF, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(201, 201, 201)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(DateMLabel)
                        .addComponent(passwordLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(ConfirmPasswordLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(DatecLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(EmailLabel)
                        .addComponent(LoginLabel)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateDerniereModificationTF, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordTF, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(confirmationPasswordTF, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EmailTf, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(loginTF)
                                .addComponent(dateCreationTF, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addComponent(errLoginLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(modifierBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103)
                .addComponent(enregisterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(105, 105, 105)
                .addComponent(supprimerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 993, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(RetourBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(NomLabel)
                                        .addComponent(DateNaissLabel)
                                        .addComponent(AdresseLabel)
                                        .addComponent(TelLabel)
                                        .addComponent(SexeLabel))
                                    .addGap(26, 26, 26)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(telephoneTF)
                                                .addComponent(jScrollPane2)
                                                .addComponent(dateNaissanceTF)
                                                .addComponent(nomTF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGap(10, 10, 10)
                                            .addComponent(yyyy))
                                        .addComponent(sexeCB, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modifierBtn)
                    .addComponent(enregisterBtn)
                    .addComponent(supprimerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prenomTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PrenomLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EmailLabel)
                            .addComponent(EmailTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LoginLabel)
                            .addComponent(loginTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(errLoginLabel))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DatecLabel)
                            .addComponent(dateCreationTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DateMLabel)
                            .addComponent(dateDerniereModificationTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passwordLabel)
                            .addComponent(passwordTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ConfirmPasswordLabel)
                            .addComponent(confirmationPasswordTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(81, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(5, 5, 5)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(RetourBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(NomLabel)
                        .addComponent(nomTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(71, 71, 71)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(DateNaissLabel)
                        .addComponent(dateNaissanceTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(yyyy))
                    .addGap(24, 24, 24)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(telephoneTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(TelLabel)))
                        .addComponent(AdresseLabel))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(SexeLabel)
                        .addComponent(sexeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(22, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 private boolean verifierChamps(){
        String erreurMsg = "";
        boolean result = true;
        
        if (nomTF.getText().length() < 3)
        {
            erreurMsg += "Le nom doit au moins avoir trois caracteres.\n";
            result = false;
        }
        
        if (prenomTF.getText().length() < 3)
        {
            erreurMsg += "Le prenom doit au moins avoir trois caracteres.\n";
            result = false;
        }    
        
        if (!utils.Validators.NumeroTelValidator(telephoneTF.getText()) )
        {
            erreurMsg += "Le numéro de téléphone n'est pas valide.\n";
            result = false;
        }
        else if (!utils.Validators.TailleNumTelValidator(telephoneTF.getText()) )
        {
            erreurMsg += "Le numéro de téléphone est supérieur a 8 chiffre .\n";
            result = false;
        }
       else if (!utils.Validators.NomPrenomValidator(nomTF.getText()) )
        {
            erreurMsg += "Le Nom est invalide.\n";
            result = false;
        }
       else if (!utils.Validators.NomPrenomValidator(prenomTF.getText()) )
        {
            erreurMsg += "Le Prennom est invalide.\n";
            result = false;
        }
       else if (!utils.Validators.DateValidator(dateNaissanceTF.getText()) )
        {
            erreurMsg += "Le Format de la date est incorecte .\n";
            result = false;
        }
       else if (!utils.Validators.ConfirmerMotDePasseValidator(passwordTF.getText(),confirmationPasswordTF.getText()))
       {
            erreurMsg += "la confirmation du mot de passe est inccorecte \n";
            result = false;
       }
         else if (!utils.Validators.EmailValidator(EmailTf.getText()))
       {
            erreurMsg += "le format du mail est incorrecte \n";
            result = false;
       }
        if (!result)
            JOptionPane.showMessageDialog(null, erreurMsg);
        
        return result;
    }
 
     private void changerEtatInformation(boolean etat){
        nomTF.setEnabled(etat);
        prenomTF.setEnabled(etat);
        dateNaissanceTF.setEnabled(etat);
        adresseTA.setEnabled(etat);
        telephoneTF.setEnabled(etat);
        sexeCB.setEnabled(etat);
        loginTF.setEnabled(etat);
        dateCreationTF.setEnabled(etat);
        dateDerniereModificationTF.setEditable(etat);
        EmailTf.setEditable(etat);
    }
    
    private void viderChamps(){
        nomTF.setText(null);
        prenomTF.setText(null);
        dateNaissanceTF.setText(null);
        adresseTA.setText(null);
        telephoneTF.setText(null);
        sexeCB.setSelectedIndex(0);
        loginTF.setText(null);
        dateCreationTF.setText(null);
        dateDerniereModificationTF.setText(null);
        EmailTf.setText(null);
    }
    
    private void changerEtatMotDePasse(boolean etat){
        passwordLabel.setVisible(etat);
        passwordTF.setVisible(etat);
        ConfirmPasswordLabel.setVisible(etat);
        confirmationPasswordTF.setVisible(etat);
    }
 
    private void EtatVisibleAll(boolean etat)
    {
        nomTF.setVisible(etat);
        prenomTF.setVisible(etat);
        dateNaissanceTF.setVisible(etat);
        adresseTA.setVisible(etat);
        telephoneTF.setVisible(etat);
        sexeCB.setVisible(etat);
        loginTF.setVisible(etat);
        dateCreationTF.setVisible(etat);
        dateDerniereModificationTF.setVisible(etat);
        EmailTf.setVisible(etat);
        EmailLabel.setVisible(etat);
        DatecLabel.setVisible(etat);
        DateMLabel.setVisible(etat);
        LoginLabel.setVisible(etat);
        NomLabel.setVisible(etat);
        PrenomLabel.setVisible(etat);
        DateNaissLabel.setVisible(etat);
        AdresseLabel.setVisible(etat);
        SexeLabel.setVisible(etat);
        TelLabel.setVisible(etat);
        yyyy.setVisible(etat);
        errLoginLabel.setVisible(etat);
    }
    private void enregisterBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enregisterBtnMouseClicked
        Authentification authentification= new Authentification();
        Passagers passager= new Passagers();
        if (verifierChamps())
        {

            //modification
            authentification.setIdAuthentification(((utils.components.jtable.tableModelGererUtilisateurPassager)datagrid.getModel()).getRowEntity(datagrid.getSelectedRow()).getIdAuthentification());
            authentification.setLogin(loginTF.getText());
            if (passwordTF.getPassword().length != 0)
            authentification.setPassword(utils.Functions.ConvertToMd5(passwordTF.getPassword().toString()));
            else
            authentification.setPassword(((utils.components.jtable.tableModelGererUtilisateurPassager)datagrid.getModel()).getRowEntity(datagrid.getSelectedRow()).getPassword());

            authentification.setType('p');
            authentification.setDateCreation(new Date(new java.util.Date().getTime()));
            authentification.setDateDernierModification(null);
            Passagers Pass = (Passagers)((utils.components.jtable.tableModelGererUtilisateurPassager)datagrid.getModel()).getRowEntity(datagrid.getSelectedRow()).getCompte();
            passager.setIdPassagers(Pass.getIdPassagers());
            String jjj = nomTF.getText();
            passager.setNom(jjj);
            passager.setPrenom(prenomTF.getText());
            passager.setAdresse(adresseTA.getText());
            passager.setNumeroTel(telephoneTF.getText());
            passager.setEmail(EmailTf.getText());

            passager.setDateNaissance(null);

            if (sexeCB.getSelectedIndex() == 1)
            passager.setSexe('M');
            else
            passager.setSexe('F');

            authentification.setCompte(passager);

            try {
                //Tester si la modification avec succé on rafréchi le Jtable
                if (DAO.AuthentificationDAO.getInstance().update(authentification))
                {
                    datagrid.setModel(new utils.components.jtable.tableModelGererUtilisateurPassager());
                    JOptionPane.showMessageDialog(null, "Modification avec succé");
                    viderChamps();

                    enregisterBtn.setVisible(false);
                    supprimerBtn.setVisible(false);
                    modifierBtn.setVisible(false);
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Modification n'as pas été abouti");
                }
            } catch (ProblemeTechniqueException ex) {
                System.out.println("problem");
            }

        }
        changerEtatInformation(false);
        modifierBtn.setVisible(true);
        supprimerBtn.setVisible(true);
        enregisterBtn.setVisible(false);

    }//GEN-LAST:event_enregisterBtnMouseClicked

    private void enregisterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enregisterBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enregisterBtnActionPerformed

    private void modifierBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modifierBtnMouseClicked
        changerEtatInformation(true);
        enregisterBtn.setVisible(true);
        changerEtatMotDePasse(true);
    }//GEN-LAST:event_modifierBtnMouseClicked

    private void modifierBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modifierBtnActionPerformed

    private void supprimerBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_supprimerBtnMouseClicked
        enregisterBtn.setVisible(false);
        metier.AuthentificationMetier authentificationMetier = new  metier.AuthentificationMetier();
        try {
            Authentification authentification = ((utils.components.jtable.tableModelGererUtilisateurPassager)datagrid.getModel()).getRowEntity(datagrid.getSelectedRow());
            Passagers passager = (Passagers)authentification.getCompte();

            // supression d'un admin séléctionner apartir de la table authentification et administrateur
            if (authentificationMetier.DeleteAuthentification(authentification))
            {
                if (DAO.PassagersDAO.getInstance().delete(passager))
                {
                    JOptionPane.showMessageDialog(null, "Supression avec succé");
                    datagrid.setModel(new utils.components.jtable.tableModelGererUtilisateurPassager());
                }
                else
                JOptionPane.showMessageDialog(null, "Supression non abouti");
            }
            else
            System.out.println("aaa");

        } catch (ProblemeTechniqueException ex) {
            System.out.println("Probléme de supression");
        }
        viderChamps();
    }//GEN-LAST:event_supprimerBtnMouseClicked
     private void remplireInformations(int ligne){
        Authentification authentification = ((utils.components.jtable.tableModelGererUtilisateurPassager)datagrid.getModel()).getRowEntity(ligne);
        Passagers passager = (Passagers)authentification.getCompte();
        
        nomTF.setText(passager.getNom());
        prenomTF.setText(passager.getPrenom());
        dateNaissanceTF.setText(passager.getDateNaissance().toString());
        adresseTA.setText(passager.getAdresse());
        telephoneTF.setText(passager.getNumeroTel());
        EmailTf.setText(passager.getEmail());
        
        if (passager.getSexe() == 'M')
            sexeCB.setSelectedIndex(0);
        else
            sexeCB.setSelectedIndex(1);
        
        loginTF.setText(authentification.getLogin());
        dateCreationTF.setText(authentification.getDateCreation().toString());
        
        if (authentification.getDateDernierModification() == null)
            dateDerniereModificationTF.setText(null);
        else
            dateDerniereModificationTF.setText(authentification.getDateDernierModification().toString());
    }
    private void datagridMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_datagridMouseClicked
        remplireInformations(datagrid.getSelectedRow());
        changerEtatInformation(false);
        changerEtatMotDePasse(false);
        EtatVisibleAll(true);
        modifierBtn.setVisible(true);
        enregisterBtn.setVisible(true);
        supprimerBtn.setVisible(true);
    }//GEN-LAST:event_datagridMouseClicked

    private void loginTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_loginTFFocusLost

    }//GEN-LAST:event_loginTFFocusLost

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
      changerEtatInformation(false);
      changerEtatMotDePasse(false);
      EtatVisibleAll(false);
      modifierBtn.setVisible(false);
      enregisterBtn.setVisible(false);
      supprimerBtn.setVisible(false);
      
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GererPassager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GererPassager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GererPassager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GererPassager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GererPassager().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AdresseLabel;
    private javax.swing.JLabel ConfirmPasswordLabel;
    private javax.swing.JLabel DateMLabel;
    private javax.swing.JLabel DateNaissLabel;
    private javax.swing.JLabel DatecLabel;
    private javax.swing.JLabel EmailLabel;
    private javax.swing.JTextField EmailTf;
    private javax.swing.JLabel LoginLabel;
    private javax.swing.JLabel NomLabel;
    private javax.swing.JLabel PrenomLabel;
    private javax.swing.JButton RetourBTN;
    private javax.swing.JLabel SexeLabel;
    private javax.swing.JLabel TelLabel;
    private javax.swing.JTextArea adresseTA;
    private javax.swing.JPasswordField confirmationPasswordTF;
    private javax.swing.JTable datagrid;
    private javax.swing.JTextField dateCreationTF;
    private javax.swing.JTextField dateDerniereModificationTF;
    private javax.swing.JTextField dateNaissanceTF;
    private javax.swing.JButton enregisterBtn;
    private javax.swing.JLabel errLoginLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField loginTF;
    private javax.swing.JButton modifierBtn;
    private javax.swing.JTextField nomTF;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JPasswordField passwordTF;
    private javax.swing.JTextField prenomTF;
    private javax.swing.JComboBox sexeCB;
    private javax.swing.JButton supprimerBtn;
    private javax.swing.JTextField telephoneTF;
    private javax.swing.JLabel yyyy;
    // End of variables declaration//GEN-END:variables
}
