/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.ItineraireRecentConducteur;
import Entity.*;
import DAO.*;
import static java.awt.image.ImageObserver.WIDTH;
import java.sql.Date;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import metier.*;
import utils.ComboBoxModel.ComboModelNomPassager;
import utils.Exceptions.ProblemeTechniqueException;
/**
 *
 * @author Axel
 */
public class ItineraireRecentConducteur extends javax.swing.JFrame {

    /**
     * Creates new form RapporterPassager
     */
    
    private Itineraire itineraire;
    private VilleItineraire villeItineraire ; 
    private participerevents ParticiperEvents ;
    private Passagers passagers ; 
    List<String> info = new ArrayList<>();
    List<String>infoMail = new ArrayList<>();
    
    public ItineraireRecentConducteur() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        datagrid = new javax.swing.JTable();
        ListePassager = new javax.swing.JComboBox();
        ListePassagerLabel = new javax.swing.JLabel();
        NoterBtn = new javax.swing.JButton();
        ReporterBtn = new javax.swing.JButton();
        NoteLabel = new javax.swing.JLabel();
        NoteTf = new javax.swing.JTextField();
        EmailBox = new javax.swing.JComboBox();
        etoile1 = new javax.swing.JLabel();
        etoile2 = new javax.swing.JLabel();
        etoile3 = new javax.swing.JLabel();
        etoile4 = new javax.swing.JLabel();
        etoile5 = new javax.swing.JLabel();
        CauseLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        CauseTF = new javax.swing.JTextArea();
        NbrReportLabel = new javax.swing.JLabel();
        NbrReportTf = new javax.swing.JTextField();
        NbrBannisLabel = new javax.swing.JLabel();
        NbrBannisTf = new javax.swing.JTextField();
        EnregisterReportBtn = new javax.swing.JButton();

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        datagrid.setModel(new utils.components.jtable.tableModelMesItineraireRecent());
        datagrid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                datagridMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(datagrid);

        ListePassager.setModel(new utils.ComboBoxModel.ComboModelNomPassager(info));
        ListePassager.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ListePassagerItemStateChanged(evt);
            }
        });

        ListePassagerLabel.setText("Liste des Passagers");

        NoterBtn.setText("Noter");
        NoterBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NoterBtnMouseClicked(evt);
            }
        });

        ReporterBtn.setText("Reporter");
        ReporterBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ReporterBtnMouseClicked(evt);
            }
        });

        NoteLabel.setText("Note :");

        NoteTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NoteTfActionPerformed(evt);
            }
        });
        NoteTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                NoteTfKeyReleased(evt);
            }
        });

        EmailBox.setModel(new utils.ComboBoxModel.ComboModelNomPassager(infoMail));

        etoile1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/etoile.png"))); // NOI18N

        etoile2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/etoile.png"))); // NOI18N

        etoile3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/etoile.png"))); // NOI18N

        etoile4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/etoile.png"))); // NOI18N

        etoile5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/etoile.png"))); // NOI18N

        CauseLabel.setText("Cause :");

        CauseTF.setColumns(20);
        CauseTF.setRows(5);
        jScrollPane2.setViewportView(CauseTF);

        NbrReportLabel.setText("Nombre de foix reporter");

        NbrBannisLabel.setText("Nombre de foix Bannis");

        EnregisterReportBtn.setText("Enregistrer");
        EnregisterReportBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EnregisterReportBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 817, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(NbrReportLabel)
                        .addGap(18, 18, 18)
                        .addComponent(NbrReportTf, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90)
                        .addComponent(NbrBannisLabel)
                        .addGap(18, 18, 18)
                        .addComponent(NbrBannisTf, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ReporterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ListePassagerLabel)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(EmailBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ListePassager, 0, 174, Short.MAX_VALUE))
                        .addGap(33, 33, 33)
                        .addComponent(NoteLabel)
                        .addGap(18, 18, 18)
                        .addComponent(NoteTf, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(etoile1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(etoile2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(etoile3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(etoile4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(etoile5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(NoterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(EnregisterReportBtn)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CauseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(EmailBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ListePassager, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ListePassagerLabel)
                        .addComponent(NoterBtn)
                        .addComponent(NoteLabel)
                        .addComponent(NoteTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(etoile1))
                    .addComponent(etoile2)
                    .addComponent(etoile3)
                    .addComponent(etoile4)
                    .addComponent(etoile5))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReporterBtn)
                    .addComponent(NbrReportLabel)
                    .addComponent(NbrReportTf, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NbrBannisLabel)
                    .addComponent(NbrBannisTf, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(CauseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(EnregisterReportBtn)
                        .addGap(54, 54, 54))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void remplirInformationComboBox(int ligne) throws ProblemeTechniqueException
    {
            villeItineraire = new VilleItineraire();
            itineraire = new Itineraire();
            
        try {
            info=new ArrayList<>();
            infoMail = new ArrayList<>();
            villeItineraire =  ((utils.components.jtable.tableModelMesItineraireRecent)datagrid.getModel()).getRowEntity(ligne);
            itineraire = villeItineraire.getIdItineraires();
            List<participerevents> ListEvents = new ArrayList<>();
            ListEvents = participereventsDAO.getInstance().FindParticiperEventsByIdItineraires(itineraire.getIditineraire());
            List<Passagers> PassagerList = new ArrayList<>();
            for(int i=0;i<ListEvents.size();i++)
            {
                PassagerList.add(ListEvents.get(i).getIdPassagers());
            }
             for(int j=0;j<PassagerList.size();j++)
            {
                info.add(PassagerList.get(j).getNom()+" "+PassagerList.get(j).getPrenom());
                infoMail.add(PassagerList.get(j).getEmail());
            }
            
            ListePassager.setModel(new utils.ComboBoxModel.ComboModelNomPassager(info));
            EmailBox.setModel(new utils.ComboBoxModel.ComboModelNomPassager(infoMail));
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ItineraireRecentConducteur.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ItineraireRecentConducteur.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void remplirinformations(int ligne) throws ProblemeTechniqueException
    {
            
        remplirInformationComboBox(ligne);
        
        
    }
    private void datagridMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_datagridMouseClicked
       ListePassager.setVisible(true);
       ListePassagerLabel.setVisible(true);
       NoteTf.setText("");
       NoteTf.disable();
       NoteTf.setVisible(false);
       setEtoilsInvisible();
       NoteLabel.setVisible(false);
        try {
            remplirinformations(datagrid.getSelectedRow());
        } catch (ProblemeTechniqueException ex) {
            Logger.getLogger(ItineraireRecentConducteur.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_datagridMouseClicked

    private void NoteTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NoteTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NoteTfActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
      NoteLabel.setVisible(false);
       NoteTf.setVisible(false);
        ListePassager.setVisible(false);
        ListePassagerLabel.setVisible(false);
        EmailBox.setVisible(false);
        NoteTf.disable();
        etoile1.setVisible(false);
        etoile2.setVisible(false);
        etoile3.setVisible(false);
        etoile4.setVisible(false);
        etoile5.setVisible(false);
        CauseLabel.setVisible(false);
        CauseTF.setVisible(false);
        NbrBannisLabel.setVisible(false);
        NbrBannisTf.setVisible(false);
        NbrReportLabel.setVisible(false);
        NbrReportTf.setVisible(false);
        NbrBannisTf.disable();
        NbrReportTf.disable();
        CauseTF.disable();
        EnregisterReportBtn.setVisible(false);
    }//GEN-LAST:event_formWindowOpened
    private void CalculeNote(double note)
    {
        if ((0<=note) && (note<2))
             etoile1.setVisible(true);
        else if ((2<=note) && (note<4))
        {
             etoile1.setVisible(true);
             etoile2.setVisible(true);
        }
        else if ((4<=note) && (note<6))
        {
             etoile1.setVisible(true);
             etoile2.setVisible(true);
             etoile3.setVisible(true);
        }
        else if ((6<=note) && (note<8))
        {
             etoile1.setVisible(true);
             etoile2.setVisible(true);
             etoile3.setVisible(true);
             etoile4.setVisible(true);
        }
        else if ((8<=note) && (note<=10))
        {
             etoile1.setVisible(true);
             etoile2.setVisible(true);
             etoile3.setVisible(true);
             etoile4.setVisible(true);
             etoile5.setVisible(true);
        }
        
    }
    private void setEtoilsInvisible()
    {
             etoile1.setVisible(false);
             etoile2.setVisible(false);
             etoile3.setVisible(false);
             etoile4.setVisible(false);
             etoile5.setVisible(false);
    }
    private void ListePassagerItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ListePassagerItemStateChanged
            Passagers passagers = new Passagers();
            NoteLabel.setVisible(true);
            NoteTf.setVisible(true);
            setEtoilsInvisible();
            NbrBannisLabel.setVisible(true);
            NbrBannisTf.setVisible(true);
            NbrReportLabel.setVisible(true);
            NbrReportTf.setVisible(true);
            
          
            
            
            //fin de l'affectation
            EmailBox.setSelectedIndex(ListePassager.getSelectedIndex());
        try {
             passagers = PassagersDAO.getInstance().getPassagerByEmail(EmailBox.getSelectedItem().toString()) ;
             double note = passagers.getNote();
             String result=String.valueOf(note);
             NoteTf.setText(result);
             if(!NoteTf.getText().equals(""))
             {
                 CalculeNote(note);
             }
               //affecter des vlauer au champs nobre de bannisement et nombre de report 
            
            Authentification authentification = new Authentification();
            authentification = AuthentificationDAO.getInstance().getByIdCompte(passagers.getIdPassagers()) ;
            int nbrBan = BanissementsDAO.getInstance().getNbrBannisementByIdAuthentification(authentification.getIdAuthentification());
            int nbrReport = RapportDAO.getInstance().getNbrBannisementByIdPassager(passagers.getIdPassagers());
            NbrBannisTf.setText(String.valueOf(nbrBan));
            NbrReportTf.setText(String.valueOf(nbrReport));
        } catch (ProblemeTechniqueException ex) {
            Logger.getLogger(ItineraireRecentConducteur.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ItineraireRecentConducteur.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ItineraireRecentConducteur.class.getName()).log(Level.SEVERE, null, ex);
        }
        
       
    }//GEN-LAST:event_ListePassagerItemStateChanged

    private void NoterBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NoterBtnMouseClicked
        NoteLabel.setVisible(true);
        NoteTf.setText("");
        NoteTf.setVisible(true);
        NoteTf.enable();
    }//GEN-LAST:event_NoterBtnMouseClicked

    private void NoteTfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NoteTfKeyReleased
        setEtoilsInvisible();
        int note = Integer.parseInt(NoteTf.getText());
        CalculeNote(note);
    }//GEN-LAST:event_NoteTfKeyReleased

    private void ReporterBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReporterBtnMouseClicked
        CauseLabel.setVisible(true);
        CauseTF.setVisible(true);
        CauseTF.enable();
        EnregisterReportBtn.setVisible(true);
    }//GEN-LAST:event_ReporterBtnMouseClicked

    private void EnregisterReportBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EnregisterReportBtnMouseClicked
        if (CauseTF.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Il faut remplir le cause");
        }
        else
        {
            
             java.text.SimpleDateFormat df = new java.text.SimpleDateFormat("yyyy-mm-dd");
             df.format(Calendar.getInstance().getTime());
            try {
                passagers = PassagersDAO.getInstance().getPassagerByEmail(EmailBox.getSelectedItem().toString()) ;
            } catch (ProblemeTechniqueException ex) {
                System.out.println("probleme de recuperation dun passager");
            }
            Rapport rapport = new Rapport();
            rapport.setCause(CauseTF.getText());
            rapport.setRapporterConducteur(false);
            rapport.setRapporterPassager(true);
            rapport.setDaterapport(df.getCalendar().getTime());
            rapport.setIdPassager(passagers);
            rapport.setTraiter(false);
            rapport.setIditineraire(itineraire);
            try {
                  if (RapportDAO.getInstance().create(rapport))
                  {
                      JOptionPane.showMessageDialog(null, "Le Passager "+passagers.getNom()+" "+passagers.getPrenom()+" a été rapporter");
                      CauseLabel.setVisible(false);
                      CauseTF.setVisible(false);
                      ReporterBtn.setVisible(false);
                      EnregisterReportBtn.setVisible(false);
                      passagers = PassagersDAO.getInstance().getPassagerByEmail(EmailBox.getSelectedItem().toString()) ;
                      Authentification authentification = new Authentification();
                      authentification = AuthentificationDAO.getInstance().getByIdCompte(passagers.getIdPassagers()) ;
                      int nbrBan = BanissementsDAO.getInstance().getNbrBannisementByIdAuthentification(authentification.getIdAuthentification());
                      int nbrReport = RapportDAO.getInstance().getNbrBannisementByIdPassager(passagers.getIdPassagers());
                      NbrBannisTf.setText(String.valueOf(nbrBan));
                      NbrReportTf.setText(String.valueOf(nbrReport));
                  }
                  else
                  {
                       JOptionPane.showMessageDialog(null, "le Passager n'as pas été rapporter");
                  }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ItineraireRecentConducteur.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ProblemeTechniqueException ex) {
                Logger.getLogger(ItineraireRecentConducteur.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(ItineraireRecentConducteur.class.getName()).log(Level.SEVERE, null, ex);
            } 
        }
    }//GEN-LAST:event_EnregisterReportBtnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ItineraireRecentConducteur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ItineraireRecentConducteur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ItineraireRecentConducteur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ItineraireRecentConducteur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ItineraireRecentConducteur().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CauseLabel;
    private javax.swing.JTextArea CauseTF;
    private javax.swing.JComboBox EmailBox;
    private javax.swing.JButton EnregisterReportBtn;
    private javax.swing.JComboBox ListePassager;
    private javax.swing.JLabel ListePassagerLabel;
    private javax.swing.JLabel NbrBannisLabel;
    private javax.swing.JTextField NbrBannisTf;
    private javax.swing.JLabel NbrReportLabel;
    private javax.swing.JTextField NbrReportTf;
    private javax.swing.JLabel NoteLabel;
    private javax.swing.JTextField NoteTf;
    private javax.swing.JButton NoterBtn;
    private javax.swing.JButton ReporterBtn;
    private javax.swing.JTable datagrid;
    private javax.swing.JLabel etoile1;
    private javax.swing.JLabel etoile2;
    private javax.swing.JLabel etoile3;
    private javax.swing.JLabel etoile4;
    private javax.swing.JLabel etoile5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
