/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.ChercherItinieraire;
import Entity.*;
import DAO.*;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import metier.*;
import utils.Exceptions.ProblemeTechniqueException;
/**
 *
 * @author Axel
 */
public class ChercherItineraire extends javax.swing.JFrame {
    private Itineraire itineraire ;
    private VilleItineraire ville ;
    private List<participerevents> PE = new ArrayList<>();
    /**
     * Creates new form ChercherItineraire
     */
    public ChercherItineraire() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        datagrid = new javax.swing.JTable();
        PanelInfo = new javax.swing.JPanel();
        infoConducteurLabel = new javax.swing.JLabel();
        ConductuerLabel = new javax.swing.JLabel();
        ConductuerTf = new javax.swing.JTextField();
        NoteLabel = new javax.swing.JLabel();
        NoteTf = new javax.swing.JTextField();
        etoile1 = new javax.swing.JLabel();
        etoile2 = new javax.swing.JLabel();
        etoile3 = new javax.swing.JLabel();
        etoile4 = new javax.swing.JLabel();
        etoile5 = new javax.swing.JLabel();
        InfoItineraireLabel = new javax.swing.JLabel();
        VilleDLabel = new javax.swing.JLabel();
        GouverneratBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        delegationBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        LocalitesBox = new javax.swing.JComboBox();
        GouverneratBox1 = new javax.swing.JComboBox();
        LocalitesBox1 = new javax.swing.JComboBox();
        delegationBox1 = new javax.swing.JComboBox();
        VilleALabel = new javax.swing.JLabel();
        PrixTf = new javax.swing.JTextField();
        DateDepartTf = new javax.swing.JTextField();
        DateDLabel = new javax.swing.JLabel();
        PrixLabel = new javax.swing.JLabel();
        NbrPlaceVoitureLabel = new javax.swing.JLabel();
        NbrPlaceVoitureTf = new javax.swing.JTextField();
        NbrPConfirmerLabel = new javax.swing.JLabel();
        NbrPassagerConfirmerTf = new javax.swing.JTextField();
        NbrPAttenteLabel = new javax.swing.JLabel();
        NbrAttenteTf = new javax.swing.JTextField();
        informationVoitureLabel = new javax.swing.JLabel();
        ModelLabel = new javax.swing.JLabel();
        ModelTf = new javax.swing.JTextField();
        MarqueLabel = new javax.swing.JLabel();
        MarqueTf = new javax.swing.JTextField();
        AnneVoitureLabel = new javax.swing.JLabel();
        AnneVoitureTf = new javax.swing.JTextField();
        Bagage = new javax.swing.JCheckBox();
        climatiseur = new javax.swing.JCheckBox();
        tabac = new javax.swing.JCheckBox();
        enfant = new javax.swing.JCheckBox();
        DescriptionConducteurLabel = new javax.swing.JLabel();
        DescriptionLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DescriptionTf = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        NumeroTeltf = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        EmailTf = new javax.swing.JTextField();
        ParticiperBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        datagrid.setModel(new utils.components.jtable.TableModelChercherItineraire());
        datagrid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                datagridMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(datagrid);

        infoConducteurLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        infoConducteurLabel.setText("Information Conducteur : ");

        ConductuerLabel.setText("Conductuer : ");

        NoteLabel.setText("Note :");

        etoile1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/etoile.png"))); // NOI18N

        etoile2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/etoile.png"))); // NOI18N

        etoile3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/etoile.png"))); // NOI18N

        etoile4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/etoile.png"))); // NOI18N

        etoile5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/etoile.png"))); // NOI18N

        InfoItineraireLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        InfoItineraireLabel.setText("Information Itinéraire  : ");

        VilleDLabel.setText("Ville de départ :");

        jLabel3.setText("Gouvernerat");

        jLabel4.setText("Delegation");

        jLabel5.setText("Localite");

        VilleALabel.setText("Ville d'arriver :");

        DateDLabel.setText("Date de départ :");

        PrixLabel.setText("Prix :");

        NbrPlaceVoitureLabel.setText("Nombre de place dans la voiture :");

        NbrPConfirmerLabel.setText("Nombre de passager confirmer :");

        NbrPAttenteLabel.setText("Nombre de passager en attente : ");

        informationVoitureLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        informationVoitureLabel.setText("Information Voiture conducteur  : ");

        ModelLabel.setText("Model de la voiture : ");

        MarqueLabel.setText("Marque");

        AnneVoitureLabel.setText("Anne de la voiture :");

        Bagage.setText("Bagage");

        climatiseur.setText("Climatiseur");

        tabac.setText("Tabac");

        enfant.setText("Enfants");

        DescriptionConducteurLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        DescriptionConducteurLabel.setText("Description du conductuer : ");

        DescriptionLabel.setText("Description :");

        DescriptionTf.setColumns(20);
        DescriptionTf.setRows(5);
        jScrollPane1.setViewportView(DescriptionTf);

        jLabel1.setText("Numéro de téléphone :");

        jLabel2.setText("Email : ");

        ParticiperBtn.setText("Participer");
        ParticiperBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ParticiperBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout PanelInfoLayout = new javax.swing.GroupLayout(PanelInfo);
        PanelInfo.setLayout(PanelInfoLayout);
        PanelInfoLayout.setHorizontalGroup(
            PanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelInfoLayout.createSequentialGroup()
                        .addGap(280, 280, 280)
                        .addComponent(jLabel3)
                        .addGap(200, 200, 200)
                        .addComponent(jLabel4)
                        .addGap(177, 177, 177)
                        .addComponent(jLabel5))
                    .addGroup(PanelInfoLayout.createSequentialGroup()
                        .addComponent(infoConducteurLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(260, 260, 260)
                        .addComponent(ParticiperBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(InfoItineraireLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(informationVoitureLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelInfoLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(PanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelInfoLayout.createSequentialGroup()
                                .addGap(389, 389, 389)
                                .addComponent(tabac)
                                .addGap(211, 211, 211)
                                .addComponent(enfant))
                            .addGroup(PanelInfoLayout.createSequentialGroup()
                                .addComponent(Bagage)
                                .addGap(108, 108, 108)
                                .addComponent(climatiseur))
                            .addGroup(PanelInfoLayout.createSequentialGroup()
                                .addComponent(ModelLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ModelTf, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(DescriptionConducteurLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelInfoLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(PanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelInfoLayout.createSequentialGroup()
                                .addGroup(PanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(VilleDLabel)
                                    .addComponent(VilleALabel))
                                .addGap(166, 166, 166)
                                .addGroup(PanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(GouverneratBox, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(GouverneratBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(109, 109, 109)
                                .addGroup(PanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(delegationBox, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(delegationBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(88, 88, 88)
                                .addGroup(PanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LocalitesBox, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(LocalitesBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(PanelInfoLayout.createSequentialGroup()
                                .addGroup(PanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PanelInfoLayout.createSequentialGroup()
                                        .addComponent(DateDLabel)
                                        .addGap(18, 18, 18)
                                        .addComponent(DateDepartTf, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(115, 115, 115)
                                        .addComponent(PrixLabel)
                                        .addGap(27, 27, 27)
                                        .addComponent(PrixTf, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(PanelInfoLayout.createSequentialGroup()
                                        .addComponent(NbrPConfirmerLabel)
                                        .addGap(18, 18, 18)
                                        .addComponent(NbrPassagerConfirmerTf, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(PanelInfoLayout.createSequentialGroup()
                                        .addGap(343, 343, 343)
                                        .addComponent(MarqueLabel)
                                        .addGap(18, 18, 18)
                                        .addComponent(MarqueTf, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(130, 130, 130)
                                .addGroup(PanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PanelInfoLayout.createSequentialGroup()
                                        .addComponent(AnneVoitureLabel)
                                        .addGap(29, 29, 29)
                                        .addComponent(AnneVoitureTf, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(PanelInfoLayout.createSequentialGroup()
                                        .addComponent(NbrPAttenteLabel)
                                        .addGap(18, 18, 18)
                                        .addComponent(NbrAttenteTf, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(PanelInfoLayout.createSequentialGroup()
                                        .addComponent(NbrPlaceVoitureLabel)
                                        .addGap(18, 18, 18)
                                        .addComponent(NbrPlaceVoitureTf, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(PanelInfoLayout.createSequentialGroup()
                                .addComponent(DescriptionLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 153, Short.MAX_VALUE))
            .addGroup(PanelInfoLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(ConductuerLabel)
                .addGap(32, 32, 32)
                .addComponent(ConductuerTf, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(NoteLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NoteTf, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(etoile1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(etoile2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(etoile3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(etoile4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(etoile5)
                .addGap(43, 43, 43)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(NumeroTeltf, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EmailTf))
        );
        PanelInfoLayout.setVerticalGroup(
            PanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelInfoLayout.createSequentialGroup()
                .addGroup(PanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(infoConducteurLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ParticiperBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(NumeroTeltf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(EmailTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(NoteLabel)
                        .addComponent(NoteTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(etoile1)
                        .addComponent(etoile2)
                        .addComponent(etoile3)
                        .addComponent(etoile4)
                        .addComponent(ConductuerTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ConductuerLabel)
                    .addComponent(etoile5))
                .addGap(18, 18, 18)
                .addComponent(InfoItineraireLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addGap(26, 26, 26)
                .addGroup(PanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LocalitesBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delegationBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(VilleDLabel)
                    .addComponent(GouverneratBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(PanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GouverneratBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delegationBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(VilleALabel)
                    .addComponent(LocalitesBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(PanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PrixLabel)
                    .addComponent(PrixTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DateDLabel)
                    .addComponent(DateDepartTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NbrPlaceVoitureLabel)
                    .addComponent(NbrPlaceVoitureTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(PanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NbrPassagerConfirmerTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NbrPConfirmerLabel)
                    .addComponent(NbrPAttenteLabel)
                    .addComponent(NbrAttenteTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(informationVoitureLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(PanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ModelLabel)
                    .addComponent(ModelTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MarqueLabel)
                    .addComponent(MarqueTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AnneVoitureLabel)
                    .addComponent(AnneVoitureTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Bagage)
                    .addComponent(tabac)
                    .addComponent(climatiseur)
                    .addComponent(enfant))
                .addGap(18, 18, 18)
                .addComponent(DescriptionConducteurLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DescriptionLabel)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1051, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(PanelInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AllDisable()
    {
        delegationBox.disable();
        GouverneratBox.disable();
        LocalitesBox.disable();
        delegationBox1.disable();
        GouverneratBox1.disable();
        LocalitesBox1.disable();
        DateDepartTf.disable();
        PrixTf.disable();
        NbrPassagerConfirmerTf.disable();
        NbrAttenteTf.disable();
        DescriptionTf.disable();
        NoteTf.disable();
        ModelTf.disable();
        MarqueTf.disable();
        AnneVoitureTf.disable();
        ConductuerTf.disable();
        EmailTf.disable();
        NumeroTeltf.disable();
        NbrPlaceVoitureTf.disable();
        Bagage.setEnabled(false);
        enfant.setEnabled(false);
        tabac.setEnabled(false);
        climatiseur.setEnabled(false);
    }
    
    private void CalculeNote(double note)
    {
        if ((0<=note) && (note<2))
             etoile1.setVisible(true);
        else if ((2<=note) && (note<4))
        {
             etoile1.setVisible(true);
             etoile2.setVisible(true);
        }
        else if ((4<=note) && (note<6))
        {
             etoile1.setVisible(true);
             etoile2.setVisible(true);
             etoile3.setVisible(true);
        }
        else if ((6<=note) && (note<8))
        {
             etoile1.setVisible(true);
             etoile2.setVisible(true);
             etoile3.setVisible(true);
             etoile4.setVisible(true);
        }
        else if ((8<=note) && (note<=10))
        {
             etoile1.setVisible(true);
             etoile2.setVisible(true);
             etoile3.setVisible(true);
             etoile4.setVisible(true);
             etoile5.setVisible(true);
        }
        
    }
    private void setEtoilsInvisible()
    {
             etoile1.setVisible(false);
             etoile2.setVisible(false);
             etoile3.setVisible(false);
             etoile4.setVisible(false);
             etoile5.setVisible(false);
    }
    
    private void remplissage(int ligne) throws ProblemeTechniqueException
    {
        setEtoilsInvisible();
        itineraire=((utils.components.jtable.TableModelChercherItineraire)datagrid.getModel()).getRowEntity(ligne);
        try {
            //Affectation des gouvernerat dans le combo box de la ville d'arriver et de départ 
            ville = VilleItineraireDAO.getInstance().FindVilleDepart(itineraire.getIditineraire());
            GouverneratBox.addItem(ville.getIdLocalites().getIdDelegations().getIdGouvernorats().getNomGouvernorat());
            ville = VilleItineraireDAO.getInstance().FindVilleArriver(itineraire.getIditineraire());
            GouverneratBox1.addItem(ville.getIdLocalites().getIdDelegations().getIdGouvernorats().getNomGouvernorat());
            //Fin Affectation des gouvernerat dans le combo box de la ville d'arriver et de départ 
            
             //Affectation des delegation dans le combo box de la ville d'arriver et de départ 
            ville = VilleItineraireDAO.getInstance().FindVilleDepart(itineraire.getIditineraire());
            delegationBox.addItem(ville.getIdLocalites().getIdDelegations().getNomDelegation());
            ville = VilleItineraireDAO.getInstance().FindVilleArriver(itineraire.getIditineraire());
            delegationBox1.addItem(ville.getIdLocalites().getIdDelegations().getNomDelegation());
            //Fin Affectation des delegation dans le combo box de la ville d'arriver et de départ 
            
             //Affectation des localite dans le combo box de la ville d'arriver et de départ 
            ville = VilleItineraireDAO.getInstance().FindVilleDepart(itineraire.getIditineraire());
            LocalitesBox.addItem(ville.getIdLocalites().getNomLocalite());
            ville = VilleItineraireDAO.getInstance().FindVilleArriver(itineraire.getIditineraire());
            LocalitesBox1.addItem(ville.getIdLocalites().getNomLocalite());
            //Fin Affectation des localite dans le combo box de la ville d'arriver et de départ
            
            //Affectation de la description
            DescriptionTf.setText(itineraire.getDescription());
            //Fin affectation description
            
            //affectation de la date de départ 
             DateDepartTf.setText(itineraire.getDateitineraire().toString());
            //fin affectation de la date de départ 
             
             //affectation du prix
              PrixTf.setText(String.valueOf(itineraire.getPrix()));
             //fin affectation du prix
              
              //affectation du prix
              PrixTf.setText(String.valueOf(itineraire.getPrix()));
             //fin affectation du prix
              
              //Remplissage du nombre de participant 
                int Accepter=0;
                int nonAccepter = 0 ;

                 try {
                    PE = participereventsDAO.getInstance().FindParticiperEventsByIdItineraires(itineraire.getIditineraire());

                    for(int j = 0 ; j<PE.size();j++)
                    {
                        if (PE.get(j).isEstAccepter()==true)
                        {
                            Accepter++;
                        }
                        else
                        {
                            nonAccepter++;
                        }
                    }
               
                    } catch (ClassNotFoundException ex) {
                        System.out.println("Probleme de recuperation du nombre de participant");
                    } catch (SQLException ex) {
                        System.out.println("Probleme de recuperation du nombre de participant");

                    }
                 NbrAttenteTf.setText(String.valueOf(nonAccepter));
                 NbrPassagerConfirmerTf.setText(String.valueOf(Accepter));
              //Fin remplissage du nombre de participant 
              
               //affectation Nom Prenom conductuer
              ConductuerTf.setText(itineraire.getIdConducteur().getNom()+" "+itineraire.getIdConducteur().getPrenom());
             //fin Nom Prenom conductuer
              NoteTf.setText(String.valueOf(itineraire.getIdConducteur().getNote()));
              CalculeNote(itineraire.getIdConducteur().getNote());
              EmailTf.setText(itineraire.getIdConducteur().getEmail());
              NumeroTeltf.setText(itineraire.getIdConducteur().getNumeroTel());
              NbrPlaceVoitureTf.setText(String.valueOf(itineraire.getIdConducteur().getIdVoitures().getNbrplaces()));
              ModelTf.setText(itineraire.getIdConducteur().getIdVoitures().getModele());
              MarqueTf.setText(itineraire.getIdConducteur().getIdVoitures().getMarque());
              AnneVoitureTf.setText(String.valueOf(itineraire.getIdConducteur().getIdVoitures().getAnnee()));
              if (itineraire.getIdConducteur().getIdVoitures().isBagage())
              {
                  Bagage.setSelected(true);
                  
              }
              if (itineraire.getIdConducteur().getIdVoitures().isEnfant())
              {
                  enfant.setSelected(true);
              }
              if (itineraire.getIdConducteur().getIdVoitures().isTabac())
              {
                  tabac.setSelected(true);
              }
              if (itineraire.getIdConducteur().getIdVoitures().isEstclimatiser())
              {
                  climatiseur.setSelected(true);
              }
        
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ChercherItineraire.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ChercherItineraire.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    private void datagridMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_datagridMouseClicked
        PanelInfo.setVisible(true);
        AllDisable();
        try {
            remplissage(datagrid.getSelectedRow());
        } catch (ProblemeTechniqueException ex) {
            Logger.getLogger(ChercherItineraire.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_datagridMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        PanelInfo.setVisible(false);
    }//GEN-LAST:event_formWindowOpened

    private void ParticiperBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ParticiperBtnMouseClicked
             
            //Passagers passagers = (Passagers)Entity.Session.getInstance().getUser().getCompte();
        
            
            VilleItineraire villeItineraire = new VilleItineraire();
            participerevents participer = new participerevents();
            // ville = VilleItineraireDAO.getInstance().FindVilleArriver(itineraire.getIditineraire());
            //JOptionPane.showMessageDialog(null, "la Confirmation à été rétablie avec succé");
            
            try {
                  Passagers passagers = PassagersDAO.getInstance().getPassagerById(1);
                  participer = participereventsDAO.getInstance().FindEventsByIdItinerairesAndPassager(passagers, itineraire);
                  if (participer.getIdParticiperEvents()==0)
                  {    
                     //Affectation des vlauer au villeItineraire pour effectuer l'ajout 
                     participer = new participerevents();
                     ville = VilleItineraireDAO.getInstance().FindVilleDepart(itineraire.getIditineraire());
                     villeItineraire.setIdItineraires(itineraire);
                     villeItineraire.setIdLocalites(ville.getIdLocalites());
                     villeItineraire.setLattitude(0);
                     villeItineraire.setLongitude(0);
                     villeItineraire.setNumVille(1);
                     VilleItineraireDAO.getInstance().create(villeItineraire);
                     ville = VilleItineraireDAO.getInstance().FindVilleArriver(itineraire.getIditineraire());
                     villeItineraire.setIdItineraires(itineraire);
                     villeItineraire.setIdLocalites(ville.getIdLocalites());
                     villeItineraire.setLattitude(0);
                     villeItineraire.setLongitude(0);
                     villeItineraire.setNumVille(2);
                     if (VilleItineraireDAO.getInstance().create(villeItineraire))
                     {
                        
                        participer.setIdItineraires(itineraire);
                        participer.setEstAccepter(false);
                        participer.setIdPassagers(passagers);
                        ville = VilleItineraireDAO.getInstance().FindVilleDepart(itineraire.getIditineraire());
                        participer.setVilleDepart(ville);
                        ville = VilleItineraireDAO.getInstance().FindVilleArriver(itineraire.getIditineraire());
                        participer.setVilleArrivee(ville);
                        if(participereventsDAO.getInstance().Inserrer(participer))
                        {
                            JOptionPane.showMessageDialog(null, "l'ajout à été effectuer avec succé ");
                            PanelInfo.setVisible(false);
                        }
                     }
                  }
                  else
                  {
                     JOptionPane.showMessageDialog(null, "Vous avez déja participer a cet évenement "); 
                  }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ChercherItineraire.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(ChercherItineraire.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ProblemeTechniqueException ex) {
            Logger.getLogger(ChercherItineraire.class.getName()).log(Level.SEVERE, null, ex);
        }
         
            
       
    }//GEN-LAST:event_ParticiperBtnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChercherItineraire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChercherItineraire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChercherItineraire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChercherItineraire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChercherItineraire().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AnneVoitureLabel;
    private javax.swing.JTextField AnneVoitureTf;
    private javax.swing.JCheckBox Bagage;
    private javax.swing.JLabel ConductuerLabel;
    private javax.swing.JTextField ConductuerTf;
    private javax.swing.JLabel DateDLabel;
    private javax.swing.JTextField DateDepartTf;
    private javax.swing.JLabel DescriptionConducteurLabel;
    private javax.swing.JLabel DescriptionLabel;
    private javax.swing.JTextArea DescriptionTf;
    private javax.swing.JTextField EmailTf;
    private javax.swing.JComboBox GouverneratBox;
    private javax.swing.JComboBox GouverneratBox1;
    private javax.swing.JLabel InfoItineraireLabel;
    private javax.swing.JComboBox LocalitesBox;
    private javax.swing.JComboBox LocalitesBox1;
    private javax.swing.JLabel MarqueLabel;
    private javax.swing.JTextField MarqueTf;
    private javax.swing.JLabel ModelLabel;
    private javax.swing.JTextField ModelTf;
    private javax.swing.JTextField NbrAttenteTf;
    private javax.swing.JLabel NbrPAttenteLabel;
    private javax.swing.JLabel NbrPConfirmerLabel;
    private javax.swing.JTextField NbrPassagerConfirmerTf;
    private javax.swing.JLabel NbrPlaceVoitureLabel;
    private javax.swing.JTextField NbrPlaceVoitureTf;
    private javax.swing.JLabel NoteLabel;
    private javax.swing.JTextField NoteTf;
    private javax.swing.JTextField NumeroTeltf;
    private javax.swing.JPanel PanelInfo;
    private javax.swing.JButton ParticiperBtn;
    private javax.swing.JLabel PrixLabel;
    private javax.swing.JTextField PrixTf;
    private javax.swing.JLabel VilleALabel;
    private javax.swing.JLabel VilleDLabel;
    private javax.swing.JCheckBox climatiseur;
    private javax.swing.JTable datagrid;
    private javax.swing.JComboBox delegationBox;
    private javax.swing.JComboBox delegationBox1;
    private javax.swing.JCheckBox enfant;
    private javax.swing.JLabel etoile1;
    private javax.swing.JLabel etoile2;
    private javax.swing.JLabel etoile3;
    private javax.swing.JLabel etoile4;
    private javax.swing.JLabel etoile5;
    private javax.swing.JLabel infoConducteurLabel;
    private javax.swing.JLabel informationVoitureLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JCheckBox tabac;
    // End of variables declaration//GEN-END:variables
}
